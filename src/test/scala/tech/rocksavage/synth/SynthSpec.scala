package tech.rocksavage.synth

import chisel3._
import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.should.Matchers

class TestModule extends Module {
  val in = IO(Input(Bool()))
  val out = IO(Output(Bool()))
  out := in
}

class SynthSpec extends AnyFlatSpec with Matchers {

  behavior of "Synth"

  // Helper class for testing
  it should "generate Verilog from module name" in {
    val moduleName = "tech.rocksavage.synth.TestModule"
    val expectedVerilog =
      """// Generated by CIRCT firtool-1.62.1
        |module TestModule(
        |  input  clock,
        |         reset,
        |         in,
        |  output out
        |);
        |
        |  assign out = in;
        |endmodule
        |
        |""".stripMargin

    val result = Synth.genVerilogFromModuleName(moduleName)

    result shouldEqual expectedVerilog
  }
}